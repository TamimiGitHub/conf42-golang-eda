// pubsubplus-go-client
//
// Copyright 2021-2022 Solace Corporation. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package ccsmp

// Code generated by ccsmp_flow_prop_generator.go via go generate. DO NOT EDIT.

/*
#include "solclient/solClient.h"
*/
import "C"

const (
	// SolClientFlowPropBindBlocking: This property controls whether or not to block in solClient_session_createFlow(). Default: ::SOLCLIENT_FLOW_PROP_DEFAULT_BIND_BLOCKING
	SolClientFlowPropBindBlocking = C.SOLCLIENT_FLOW_PROP_BIND_BLOCKING
	// SolClientFlowPropBindTimeoutMs: The timeout (in milliseconds) used when creating a Flow in blocking mode. The valid range is > 0. Default: ::SOLCLIENT_FLOW_PROP_DEFAULT_BIND_TIMEOUT_MS
	SolClientFlowPropBindTimeoutMs = C.SOLCLIENT_FLOW_PROP_BIND_TIMEOUT_MS
	// SolClientFlowPropBindEntityID: The type of object to which this Flow is bound. The valid values are ::SOLCLIENT_FLOW_PROP_BIND_ENTITY_SUB, ::SOLCLIENT_FLOW_PROP_BIND_ENTITY_QUEUE, and ::SOLCLIENT_FLOW_PROP_BIND_ENTITY_TE. Default: ::SOLCLIENT_FLOW_PROP_DEFAULT_BIND_ENTITY_ID
	SolClientFlowPropBindEntityID = C.SOLCLIENT_FLOW_PROP_BIND_ENTITY_ID
	// SolClientFlowPropBindEntityDurable: The durability of the object to which this Flow is bound. Default: ::SOLCLIENT_PROP_ENABLE_VAL, which means the endpoint is durable. When set to SOLCLIENT_PROP_DISABLE_VAL, a temporary endpoint is created.
	SolClientFlowPropBindEntityDurable = C.SOLCLIENT_FLOW_PROP_BIND_ENTITY_DURABLE
	// SolClientFlowPropBindName: The name of the Queue or Topic Endpoint that is the target of the bind. This property is ignored when the BIND_ENTITY_ID is ::SOLCLIENT_FLOW_PROP_BIND_ENTITY_SUB. The maximum length (not including NULL terminator) is ::SOLCLIENT_BUFINFO_MAX_QUEUENAME_SIZE except for durable queues, which has a limit of ::SOLCLIENT_BUFINFO_MAX_DURABLE_QUEUENAME_SIZE. Default: ::SOLCLIENT_FLOW_PROP_DEFAULT_BIND_NAME
	SolClientFlowPropBindName = C.SOLCLIENT_FLOW_PROP_BIND_NAME
	// SolClientFlowPropWindowsize: The Guaranteed message window size for the Flow. This sets the maximum number of messages that can be in transit (that is, the messages are sent from the appliance but are not yet delivered to the application). The valid range is 1..255. Default: ::SOLCLIENT_FLOW_PROP_DEFAULT_WINDOWSIZE
	SolClientFlowPropWindowsize = C.SOLCLIENT_FLOW_PROP_WINDOWSIZE
	// SolClientFlowPropAutoack: Deprecated: When set to ::SOLCLIENT_PROP_ENABLE_VAL, the API generates application level acknowledgments when the receive callback function returns. This property is ignored if ::SOLCLIENT_FLOW_PROP_ACKMODE is specified. Default: ::SOLCLIENT_FLOW_PROP_DEFAULT_AUTOACK
	SolClientFlowPropAutoack = C.SOLCLIENT_FLOW_PROP_AUTOACK
	// SolClientFlowPropAckmode: Controls how acknowledgments are generated for received Guaranteed messages. Possible values are ::SOLCLIENT_FLOW_PROP_ACKMODE_AUTO and ::SOLCLIENT_FLOW_PROP_ACKMODE_CLIENT. Default ::SOLCLIENT_FLOW_PROP_ACKMODE_AUTO
	SolClientFlowPropAckmode = C.SOLCLIENT_FLOW_PROP_ACKMODE
	// SolClientFlowPropTopic: When binding to a Topic endpoint, the Topic may be set in the bind. This parameter is ignored for Queue or subscriber binding. The maximum length (not including NULL terminator) is ::SOLCLIENT_BUFINFO_MAX_TOPIC_SIZE. Default: ::SOLCLIENT_FLOW_PROP_DEFAULT_TOPIC
	SolClientFlowPropTopic = C.SOLCLIENT_FLOW_PROP_TOPIC
	// SolClientFlowPropMaxBindTries: When creating a non-blocking Flow, or a Flow that is bound due to Session-connect, the maximum number of bind attempts to make. The valid range is >= 1. Default: ::SOLCLIENT_FLOW_PROP_DEFAULT_MAX_BIND_TRIES
	SolClientFlowPropMaxBindTries = C.SOLCLIENT_FLOW_PROP_MAX_BIND_TRIES
	// SolClientFlowPropAckTimerMs: The duration of the Flow acknowledgment timer (in milliseconds). The valid range is 20..1500. Default: ::SOLCLIENT_FLOW_PROP_DEFAULT_ACK_TIMER_MS
	SolClientFlowPropAckTimerMs = C.SOLCLIENT_FLOW_PROP_ACK_TIMER_MS
	// SolClientFlowPropAckThreshold: The threshold for sending an acknowledgement, configured as a percentage.
	SolClientFlowPropAckThreshold = C.SOLCLIENT_FLOW_PROP_ACK_THRESHOLD
	// SolClientFlowPropStartState: This property controls whether the Flow should be created in a start or stop state with respect to receiving messages. Flow start/stop state can be changed later through solClient_flow_start() or solClient_flow_stop(). Default ::SOLCLIENT_FLOW_PROP_DEFAULT_START_STATE
	SolClientFlowPropStartState = C.SOLCLIENT_FLOW_PROP_START_STATE
	// SolClientFlowPropSelector: A Java Message System (JMS) defined selector.
	SolClientFlowPropSelector = C.SOLCLIENT_FLOW_PROP_SELECTOR
	// SolClientFlowPropNoLocal: When a Flow has the No Local property enabled, messages published on the Session cannot appear in a Flow created in the same Session, even if the endpoint contains a subscription that matches the published message. The appliance that the Session connects to must have the No Local capability, and the capability must be enabled. If the appliance the Session is connected to does not support No Local, a call to solClient_session_createFlow() returns SOLCLIENT_FAIL and subcode ::SOLCLIENT_SUBCODE_NO_LOCAL_NOT_SUPPORTED set.
	SolClientFlowPropNoLocal = C.SOLCLIENT_FLOW_PROP_NO_LOCAL
	// SolClientFlowPropMaxUnackedMessages: This property may only be set when the Flow property ::SOLCLIENT_FLOW_PROP_ACKMODE is set to ::SOLCLIENT_FLOW_PROP_ACKMODE_CLIENT. When set to a positive value, this property controls the maximum number of messages that may be unacknowledged on the Flow (solClient_flow_sendAck() is called to acknowledge messages and remove those messages from the message spool). This property cannot be used to increase the appliance configured maximum number of acknowledged messages on the endpoint.  When set to -1, the appliance configured maximum controls how many unacknowledged messages may be received by the application. Valid values are -1 and >0.  Default ::SOLCLIENT_FLOW_PROP_DEFAULT_MAX_UNACKED_MESSAGES
	SolClientFlowPropMaxUnackedMessages = C.SOLCLIENT_FLOW_PROP_MAX_UNACKED_MESSAGES
	// SolClientFlowPropBrowser: Set browser mode on flow and signal it is a browser flow to appliance on bind. A browser flow allows client applications to look at messages spooled on Endpoints without removing them. Messages are browsed from oldest to newest. The flow window size will be reduced as messages are received. Applications have to call ::solClient_flow_start() to get more messages. After being browsed, messages are still available for consumption over normal flows. However, it is possible to selectively remove messages (by calling ::solClient_flow_sendAck()) from the persistent store of an Endpoint, in this case, these removed messages will no longer be available for consumption. Default: ::SOLCLIENT_FLOW_PROP_DEFAULT_BROWSER \n\n
	SolClientFlowPropBrowser = C.SOLCLIENT_FLOW_PROP_BROWSER
	// SolClientFlowPropActiveFlowInd: When a Flow has the Active Flow Indication property enabled, the application will receive flow events when the flow becomes active, or inactive.  If the underlying session capabilities indicate that the appliance does not support active flow indications, then solClient_session_createFlow() will fail immediately (SOLCLIENT_FAIL) and set the subCode SOLCLIENT_SUBCODE_FLOW_ACTIVE_FLOW_INDICATION_UNSUPPORTED.  Default: ::SOLCLIENT_FLOW_PROP_DEFAULT_ACTIVE_FLOW_IND
	SolClientFlowPropActiveFlowInd = C.SOLCLIENT_FLOW_PROP_ACTIVE_FLOW_IND
	// SolClientFlowPropReplayStartLocation: When a Flow is created, the application may request replay of messages from the replay log, even messages that have been previously delivered and removed the from topic endpoint or queue.  The replay start location may be ::SOLCLIENT_FLOW_PROP_REPLAY_START_LOCATION_BEGINNING to indicate that all messages available should be replayed. Or the replay start location may be a string that begins with "DATE:" followed by a date in one of two formats. The date may be a string representing a long integer, which is the number of seconds since the epoch - 0:00:00 Jan 1, 1970.  The date may be a string as specified in RFC3339 - 'YYYY-MM-DDTHH:MM:SS[.1*DIGIT]Z' or 'YYYY-MM-DDTHH:MM:SS[.1*DIGIT]("+"/"-")HH:MM'. Additionally, the replay start location may be a replication-group-message-id string as returned by solClient_replicationGroupMessageId_toString(). Such a string starts with "rmid1:" and is a ::solClient_replicationGroupMessageId_t.
	SolClientFlowPropReplayStartLocation = C.SOLCLIENT_FLOW_PROP_REPLAY_START_LOCATION
	// SolClientFlowPropMaxReconnectTries: When a flow is unbound by the message-broker due to "Replay Started" or "Service Unavailable", the API will attempt to reconnect the flow if this property is non-zero.  If this property is -1, it will retry forever. Otherwise it tries the configured maximum number of times. Default: ::SOLCLIENT_FLOW_PROP_DEFAULT_MAX_RECONNECT_TRIES
	SolClientFlowPropMaxReconnectTries = C.SOLCLIENT_FLOW_PROP_MAX_RECONNECT_TRIES
	// SolClientFlowPropReconnectRetryIntervalMs: When a flow is reconnecting, the API will attempt to reconnect immediately, if that bind attempt fails it will wait for the retry interval before attempting to connect again. Default:  ::SOLCLIENT_FLOW_PROP_DEFAULT_RECONNECT_RETRY_INTERVAL_MS
	SolClientFlowPropReconnectRetryIntervalMs = C.SOLCLIENT_FLOW_PROP_RECONNECT_RETRY_INTERVAL_MS
	// SolClientFlowPropDefaultBindTimeoutMs: The default bind timeout in milliseconds.
	SolClientFlowPropDefaultBindTimeoutMs = C.SOLCLIENT_FLOW_PROP_DEFAULT_BIND_TIMEOUT_MS
	// SolClientFlowPropDefaultWindowsize: The default Flow window size.
	SolClientFlowPropDefaultWindowsize = C.SOLCLIENT_FLOW_PROP_DEFAULT_WINDOWSIZE
	// SolClientFlowPropDefaultMaxBindTries: The default maximum number of bind attempts.
	SolClientFlowPropDefaultMaxBindTries = C.SOLCLIENT_FLOW_PROP_DEFAULT_MAX_BIND_TRIES
	// SolClientFlowPropDefaultAckTimerMs: The default Flow acknowledgment timer in milliseconds.
	SolClientFlowPropDefaultAckTimerMs = C.SOLCLIENT_FLOW_PROP_DEFAULT_ACK_TIMER_MS
	// SolClientFlowPropDefaultAckThreshold: The default threshold for sending an acknowledgment, as a percentage of the Flow window size.
	SolClientFlowPropDefaultAckThreshold = C.SOLCLIENT_FLOW_PROP_DEFAULT_ACK_THRESHOLD
	// SolClientFlowPropDefaultReconnectRetryIntervalMs: The default reconnect retry interval timer
	SolClientFlowPropDefaultReconnectRetryIntervalMs = C.SOLCLIENT_FLOW_PROP_DEFAULT_RECONNECT_RETRY_INTERVAL_MS
	// SolClientFlowPropBindEntitySub: A bind target of subscriber.
	SolClientFlowPropBindEntitySub = C.SOLCLIENT_FLOW_PROP_BIND_ENTITY_SUB
	// SolClientFlowPropBindEntityQueue: A bind target of Queue.
	SolClientFlowPropBindEntityQueue = C.SOLCLIENT_FLOW_PROP_BIND_ENTITY_QUEUE
	// SolClientFlowPropBindEntityTe: A bind target of Topic Endpoint.
	SolClientFlowPropBindEntityTe = C.SOLCLIENT_FLOW_PROP_BIND_ENTITY_TE
	// SolClientFlowPropAckmodeAuto: Automatic application acknowledgment of all received messages. If application calls ::solClient_flow_sendAck() in the ::SOLCLIENT_FLOW_PROP_ACKMODE_AUTO mode, a warning is generated.
	SolClientFlowPropAckmodeAuto = C.SOLCLIENT_FLOW_PROP_ACKMODE_AUTO
	// SolClientFlowPropAckmodeClient: Client must call solClient_flow_sendAck() to acknowledge the msgId specified.
	SolClientFlowPropAckmodeClient = C.SOLCLIENT_FLOW_PROP_ACKMODE_CLIENT
	// SolClientFlowPropReplayStartLocationBeginning: Replay all messages in the replay log
	SolClientFlowPropReplayStartLocationBeginning = C.SOLCLIENT_FLOW_PROP_REPLAY_START_LOCATION_BEGINNING
)
